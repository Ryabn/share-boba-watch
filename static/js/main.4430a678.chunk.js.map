{"version":3,"sources":["components/firebaseCalls.js","components/Index.js","components/DailyHeatMap.js","components/Statistics.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["db","Index","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Component","firebaseCalls","init","userID","firebase","enablePersistence","sessionStorage","setItem","getStats","onSuccess","onFail","collection","doc","getItem","get","then","resp","data","catch","error","days","times","DailyHeatMap","props","_this","call","state","time","width","weeklyTimeData","dailyGraph","maxes","forEach","day","push","Math","max","i","j","x","y","color","concat","s","className","index_es","variant","es","xType","yType","margin","height","orientation","colorType","style","stroke","strokeWidth","parseTimeData","Statistics","getUserData","uid","backend","foundUser","didNotFindUser","console","log","pageData","fn","component","ad","tc","td","components_DailyHeatMap","JSON","parse","d","window","innerWidth","setState","display","href","match","params","user","onClick","location","App","react_router","exact","path","theme","createMuiTheme","overrides","MuiButton","text","backgroundColor","borderRadius","border","padding","boxShadow","fontFamily","fontWeight","fontSize","&:hover","MuiBottomNavigation","root","MuiBottomNavigationAction","iconOnly","wrapper","MuiDialogActions","action","palette","primary","main","light","contrastText","secondary","typography","useNextVariants","h1","marginBottom","h2","h3","subtitle1","body1","Boolean","hostname","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","styles","react_router_dom","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4430a678.chunk.js","sourcesContent":["/**\n * @file firebaseCalls.js\n * @copyright Ryan Yang 2019\n * @summary - A set of functions to help organize all the server calls\n * in one place\n */\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nlet db;\n\n/**\n * @function init\n * @description initializes the firestore and fb auth \n */\nlet init = (userID) => {\n    db = firebase.firestore();\n    db.enablePersistence();\n    sessionStorage.setItem('uid', userID);\n}\n/**\n * @function getDrinks\n * @param {*} onSuccess\n */\nlet getStats = ( onSuccess, onFail ) => {\n    db.collection( 'users' )\n    .doc(sessionStorage.getItem('uid'))\n    .collection( 'user' )\n    .doc( 'stats' )\n    .get()\n    .then( ( resp ) => {\n        onSuccess( resp.data() );\n    }).catch((error) => {\n        onFail(error);\n    });\n}\n\n\nexport default {\n    init: init,\n    getStats: getStats\n}","import React, { Component } from 'react';\n\nexport class Index extends Component {\n  render() {\n    return (\n      <div>\n        This is the default page\n      </div>\n    )\n  }\n}\n\nexport default Index\n","import React, { Component } from 'react';\nimport {Typography} from '@material-ui/core';\nimport {\n    XYPlot,\n    XAxis,\n    YAxis,\n    HeatmapSeries,\n} from 'react-vis';\nimport 'react-vis/dist/style.css';\n\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst times = [\n    \"1 AM\", \"2 AM\", \"3 AM\", \"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\", \"11 AM\", \"12 AM\",\n    \"1 PM\", \"2 PM\", \"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\", \"8 PM\", \"9 PM\", \"10 PM\", \"11 PM\", \"12 PM\"\n];\n\nexport class DailyHeatMap extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: props.data,\n            width: props.width\n        };\n    };\n    parseTimeData(weeklyTimeData) {\n    let dailyGraph = [];\n    let maxes = [];\n    weeklyTimeData.forEach(day => {\n        maxes.push(Math.max.apply(null, day))\n    });\n    let max = Math.max.apply(null, maxes);\n    weeklyTimeData.forEach((day, i) => {\n        day.forEach((time, j) => {\n            dailyGraph.push({\n                x: days[i],\n                y: times[j],\n                color: `rgba(246, 128, 128, ${time === 0 ? 0.1 : (time)/max})`\n            });\n        });\n    });\n    return dailyGraph;\n}\n    render() {\n        let s = this.state;\n        return (\n            <div className=\"daily-chart\">\n                <Typography variant=\"h3\">\n                    Common Drinking Times\n                </Typography>\n                <XYPlot xType=\"ordinal\" yType=\"ordinal\" margin={60} width={s.width} height={1.8 * s.width}>\n                <XAxis orientation=\"top\" />\n                <YAxis />\n                <HeatmapSeries\n                    colorType=\"literal\"\n                    style={{\n                        stroke: '#F68080',\n                        strokeWidth: '2px'\n                    }}\n                    data={this.parseTimeData(s.time)}\n                    />\n                </XYPlot>\n            </div>\n        )\n    }\n}\n\nexport default DailyHeatMap;\n","import React, { Component } from 'react';\nimport backend from './firebaseCalls';\nimport { Typography } from '@material-ui/core';\nimport DailyHeatMap from './DailyHeatMap';\nimport './Statistics.css';\n\nexport class Statistics extends Component {\n    constructor(props){\n        super(props);\n        let uid = this.props.match.params.user;\n        sessionStorage.setItem('uid', uid);\n        this.getUserData( uid );\n        this.state = {\n            display: (\n                <div className=\"statistics-content--in-progress\">\n                    <Typography variant=\"h3\"> Loading data... </Typography>\n                </div>\n            )\n        };\n    }\n    getUserData = ( uid ) => {\n        backend.init( uid );\n        backend.getStats(this.foundUser, this.didNotFindUser);\n    }\n    foundUser = ( data ) => {\n        console.log(data);\n        let pageData = (\n            <div className=\"statistics-content--holder\">\n                <Typography variant=\"h2\">\n                    {data.fn}'s stats\n                </Typography>\n                <br />\n                <Typography variant=\"h3\">\n                    ...in a nutshell\n                </Typography>\n                <br />\n                <Typography variant=\"subtitle1\" component=\"p\">\n                    Drink Average: <span>${data.ad / 100}</span>\n                </Typography>\n                <Typography variant=\"subtitle1\" component=\"p\">\n                    Monthly Total: <span>${data.tc / 100}</span>\n                </Typography>\n                <Typography variant=\"subtitle1\" component=\"p\">\n                    Drinks this month: <span>{data.td}</span>\n                </Typography>\n                <br />\n                <br />\n                <DailyHeatMap data={JSON.parse(data.d)} width={window.innerWidth >= 800 ? 800 : window.innerWidth}/>\n            </div>\n        );\n        this.setState({\n            display: pageData\n        });\n    }\n    didNotFindUser = ( data ) => {\n        let pageData = (\n            <div className=\"notice-container\">\n                <Typography variant=\"subtitle1\">\n                    This person either doesn't exist or has their profile set to private. \n                </ Typography>\n                <br />\n                <Typography variant=\"body1\">\n                    If this is your profile and would like to change it, please access your user settings in your Boba Watch account. You can find more information at\n                    <a href=\"https://info.boba.watch/\"> info.boba.watch </a>\n                </Typography>\n            </div>\n        );\n        this.setState({\n            display: pageData\n        });\n    }\n    render() {\n        return (\n        <div className=\"statistics-page--container\">\n            <div className=\"statistics-title--holder\" onClick={() => {window.location = 'https://boba.watch/'} }>\n                <div className=\"statistics-title--logo\"></div>\n                <Typography variant=\"h1\">boba watch</Typography>\n            </div>\n            {this.state.display}\n        </div>\n        )\n    }\n}\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Index from './components/Index';\nimport Statistics from './components/Statistics';\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/\" component={Index}/>\n                <Route path=\"/:user\" component={Statistics}/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","import {createMuiTheme} from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    overrides: {\n      MuiButton: {\n        text: {\n          backgroundColor: '#F68080',\n          borderRadius: 3,\n          border: 0,\n          color: 'white',\n          height: 30,\n          padding: '0 30px',\n          margin: '20px',\n          boxShadow: '0 3px 5px 2px rgba(255, 105, 135, 0.3)',\n          fontFamily: 'Poppins',\n          fontWeight: 700,\n          fontSize: 14,\n          '&:hover': {\n            backgroundColor: '#FFDCDC'\n          }\n        },\n      },\n      MuiBottomNavigation: {\n        root: {\n            backgroundColor: '#FFAFA4',\n        }\n      },\n      MuiBottomNavigationAction: {\n        root: {\n            color: '#000000',\n        },\n        iconOnly: {\n            color: '#FF0000'\n        },\n        wrapper: {\n            color: '#FFFFFF ',\n        }\n      },\n      MuiDialogActions: {\n        action: {\n          color: '#FFFFFF'\n        },\n      }\n    },\n    palette: {\n        primary: {\n          main: '#F68080',\n          light: '#FFDCDC',\n          contrastText:'#FFFFFF'\n        },\n        secondary: {\n            main: '#FFFFFF',\n            contrastText: '#F68080',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n        h1: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#000000',\n            fontSize: 44,\n            marginBottom: 20\n        },\n        h2: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 48,\n            margin: 0\n        },\n        h3: {\n            fontFamily: 'Poppins',\n            fontWeight: 700,\n            color: '#FFFFFF',\n            fontSize: 20,\n        },\n        subtitle1: {\n            fontFamily: 'Poppins',\n            fontSize: 22,\n            fontWeight: 'bold',\n            color: '#333333',\n        },\n        body1: {\n            fontFamily: 'Poppins',\n            color: '#FFFFFF',\n            fontSize: 16\n        },\n    },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter as Router } from 'react-router-dom';\nimport theme from './theme';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase/app';\n\nlet firebaseConfig = {\n    apiKey: \"AIzaSyBePNJQYVteyh1Ll9fqnXbXc-S8fmJlbTQ\",\n    authDomain: \"boba-watch-firebase.firebaseapp.com\",\n    databaseURL: \"https://boba-watch-firebase.firebaseio.com\",\n    projectId: \"boba-watch-firebase\",\n    storageBucket: \"\",\n    messagingSenderId: \"674375234614\",\n    appId: \"1:674375234614:web:fdaf98c291204b9c\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <Router basename={process.env.PUBLIC_URL} >\n            <App />\n        </Router>\n    </MuiThemeProvider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}